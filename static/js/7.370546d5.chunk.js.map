{"version":3,"sources":["Auxiliar.js","components/Tables/ListTransactions.js","components/Index/wallet.js"],"names":["formatMoney","amount","decimalCount","decimal","thousands","Math","abs","isNaN","negativeSign","i","parseInt","Number","toFixed","toString","j","length","substr","replace","slice","e","console","log","ListTransactions","props","isLoading","currentPage","linesPerPage","next","bind","back","this","dispatch","getTransactions","token","className","isLoadingTransactions","transactions","map","transaction","project_name","value","Date","parse","timestamp","onClick","icon","faChevronLeft","faChevronRight","React","Component","connect","state","user","Wallet","balance"],"mappings":"yHAAO,SAASA,EAAYC,GAA2D,IAAnDC,EAAkD,uDAAnC,EAAGC,EAAgC,uDAAtB,IAAKC,EAAiB,uDAAL,IAC7E,IACIH,GAAkB,IAClBC,EAAeG,KAAKC,IAAIJ,GACxBA,EAAeK,MAAML,GAAgB,EAAIA,EAEzC,IAAMM,EAAeP,EAAS,EAAI,IAAM,GAGpCQ,EAAIC,SAAST,EAASI,KAAKC,IAAIK,OAAOV,IAAW,GAAGW,QAAQV,IAAeW,WAC3EC,EAAKL,EAAEM,OAAS,EAAKN,EAAEM,OAAS,EAAI,EAExC,OAAOP,EALU,KAKiBM,EAAIL,EAAEO,OAAO,EAAGF,GAAKV,EAAY,IAAMK,EAAEO,OAAOF,GAAGG,QAAQ,iBAAkB,KAAOb,IAAcF,EAAeC,EAAUE,KAAKC,IAAIL,EAASQ,GAAGG,QAAQV,GAAcgB,MAAM,GAAK,IACrN,MAAOC,GACLC,QAAQC,IAAIF,IAdpB,mC,gLCcMG,E,YACF,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,WAAY,EACjB,EAAKC,YAAc,EACnB,EAAKC,aAAe,GACpB,EAAKC,KAAO,EAAKA,KAAKC,KAAV,gBACZ,EAAKC,KAAO,EAAKA,KAAKD,KAAV,gBANG,E,iFAUfE,KAAKP,MAAMQ,SAASC,YAAgBF,KAAKP,MAAMU,MAAOH,KAAKL,YAAaK,KAAKJ,iB,2CAI7EN,QAAQC,IAAIS,KAAKL,e,6BAKjBK,KAAKL,cACLK,KAAKP,MAAMQ,SAASC,YAAgBF,KAAKP,MAAMU,MAAOH,KAAKL,YAAaK,KAAKJ,iB,6BAKzEI,KAAKL,YAAc,IACnBK,KAAKL,cACLK,KAAKP,MAAMQ,SAASC,YAAgBF,KAAKP,MAAMU,MAAOH,KAAKL,YAAaK,KAAKJ,kB,+BAOjF,OACI,yBAAKQ,UAAU,gEACX,yBAAKA,UAAU,wBACX,yBAAKA,UAAU,aAAf,WACA,yBAAKA,UAAU,aAAf,SACA,yBAAKA,UAAU,aAAf,SAEJ,yBAAKA,UAAU,8DACVJ,KAAKP,MAAMY,sBACR,yBAAKD,UAAU,iEACX,yBAAKA,UAAU,kCACX,yBAAKA,UAAU,2BACf,yBAAKA,UAAU,4BAAf,KACA,yBAAKA,UAAU,4BAAf,OAIRJ,KAAKP,MAAMa,cAAgBN,KAAKP,MAAMa,aAAarB,OAAS,EAC5De,KAAKP,MAAMa,aACNC,KAAI,SAACC,EAAa7B,GAAd,OACD,yBAAKyB,UAAU,sCACX,yBAAKA,UAAU,aAAaI,EAAYC,cACxC,yBAAKL,UAAU,aAAalC,YAAYsC,EAAYE,QACpD,yBAAKN,UAAU,aAAaO,KAAKC,MAAMJ,EAAYK,gBAI3D,yBAAKT,UAAU,gEAAf,sBAKZ,yBAAKA,UAAU,mDACX,yBAAKU,QAASd,KAAKD,MACf,kBAAC,IAAD,CAAiBgB,KAAMC,OAE3B,6BAAOhB,KAAKL,aACZ,yBAAKmB,QAASd,KAAKH,MACf,kBAAC,IAAD,CAAiBkB,KAAME,a,GAzEhBC,IAAMC,WA4FtBC,eATS,SAACC,GACrB,MAAO,CAEHf,aAAce,EAAMC,KAAKhB,aACzBD,sBAAuBgB,EAAMC,KAAKjB,sBAClCF,MAAOkB,EAAMC,KAAKnB,SAIXiB,CAAyB5B,GCnGlC+B,E,YACF,WAAY9B,GAAQ,IAAD,8BACf,4CAAMA,KACDa,aAAe,GAFL,E,iKAef,OACI,yBAAKF,UAAU,yBACb,wBAAIA,UAAU,2DACPlC,YAAY8B,KAAKP,MAAM6B,KAAKE,UAEjC,kBAAC,EAAD,W,GArBKN,IAAMC,WAmCZC,uBANS,SAACC,GACrB,MAAO,CACHC,KAAMD,EAAMC,QAILF,CAAyBG","file":"static/js/7.370546d5.chunk.js","sourcesContent":["export function formatMoney(amount, decimalCount = 2, decimal = \".\", thousands = \",\") {\n    try {\n        amount = amount / 100;\n        decimalCount = Math.abs(decimalCount);\n        decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n        const negativeSign = amount < 0 ? \"-\" : \"\";\n        const currency = \"$\";\n\n        let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n        let j = (i.length > 3) ? i.length % 3 : 0;\n\n        return negativeSign + currency + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n        console.log(e)\n    }\n}","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport './ListTransactions.css';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronLeft, faChevronRight, faAsterisk } from '@fortawesome/free-solid-svg-icons'\n\n\nimport { formatMoney } from '../../Auxiliar';\n\nimport { getTransactions } from '../../actions/user'\n\n\nclass ListTransactions extends React.Component {\n    constructor(props) {\n        super(props);\n        this.isLoading = true;\n        this.currentPage = 1;\n        this.linesPerPage = 10;\n        this.next = this.next.bind(this);\n        this.back = this.back.bind(this);\n    }\n\n    componentDidMount() {\n        this.props.dispatch(getTransactions(this.props.token, this.currentPage, this.linesPerPage));\n    }\n\n    componentDidUpdate() {\n        console.log(this.currentPage);\n    }\n\n    next() {\n\n        this.currentPage++;\n        this.props.dispatch(getTransactions(this.props.token, this.currentPage, this.linesPerPage));\n\n    }\n\n    back() {\n        if (this.currentPage > 1) {\n            this.currentPage--;\n            this.props.dispatch(getTransactions(this.props.token, this.currentPage, this.linesPerPage));\n        }\n    }\n\n\n\n    render() {\n        return (\n            <div className=\"evaluatz_list_transactions d-flex flex-column p-3 text-white\">\n                <div className=\"d-flex border-bottom\">\n                    <div className=\"col-4 p-3\">Project</div>\n                    <div className=\"col-4 p-3\">Value</div>\n                    <div className=\"col-4 p-3\">Date</div>\n                </div>\n                <div className=\"evaluatz_list_transactions_content container overflow-auto\">\n                    {this.props.isLoadingTransactions?\n                        <div className=\"w-100 h-100 d-flex align-items-center justify-content-around \">\n                            <div className=\"evaluatz-logo-animated-wrapper\">\n                                <div className=\"evaluatz-logo-animated\"></div>\n                                <div className=\"evaluatz-logo-animated_E\">E</div>\n                                <div className=\"evaluatz-logo-animated_V\">V</div>\n                            </div>\n                        </div>\n                        :\n                        this.props.transactions && this.props.transactions.length > 0 ?\n                        this.props.transactions\n                            .map((transaction, i) =>\n                                <div className=\"row border-bottom border-secondary\">\n                                    <div className=\"col-4 p-3\">{transaction.project_name}</div>\n                                    <div className=\"col-4 p-3\">{formatMoney(transaction.value)}</div>\n                                    <div className=\"col-4 p-3\">{Date.parse(transaction.timestamp)}</div>\n                                </div>\n                            )\n                            :\n                            <div className=\"w-100 h-100 d-flex align-items-center justify-content-center\">\n                                Records Not found\n                            </div>\n                    }\n                </div>\n                <div className=\"d-flex w-100  justify-content-around text-white\" >\n                    <div onClick={this.back}>\n                        <FontAwesomeIcon icon={faChevronLeft} />\n                    </div>\n                    <div >{this.currentPage}</div>\n                    <div onClick={this.next}>\n                        <FontAwesomeIcon icon={faChevronRight} />\n                    </div>\n                </div>\n\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n\n        transactions: state.user.transactions,\n        isLoadingTransactions: state.user.isLoadingTransactions,\n        token: state.user.token\n    };\n};\n\nexport default connect(mapStateToProps)(ListTransactions);","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport ListTransactions from '../Tables/ListTransactions';\n\nimport {formatMoney} from '../../Auxiliar';\n\nclass Wallet extends React.Component {\n    constructor(props) {\n        super(props);\n        this.transactions = [];\n    }\n\n    componentDidMount() {\n        \n    }\n\n    componentDidUpdate() {\n\n        \n    }\n\n    render() {\n        return (\n            <div className=\"evaluatz_index_wallet\">\n              <h1 className=\"evaluatz-text-xxlarge text-light shadow-sm p-3 rounded \">\n                    {formatMoney(this.props.user.balance)}\n                </h1>\n                <ListTransactions />\n            </div>\n        );\n    }\n}\n\n\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.user\n    };\n};\n\nexport default connect(mapStateToProps)(Wallet);\n\n"],"sourceRoot":""}