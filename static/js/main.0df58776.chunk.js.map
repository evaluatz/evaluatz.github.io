{"version":3,"sources":["components/00-General/Load_FullScreen.js","serviceWorker.js","reducers/filters.js","reducers/navigation.js","reducers/stocks.js","reducers/user.js","index.js","store/configureStore.js"],"names":["className","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","filtersReducerDefaultState","text","sortBy","startDate","undefined","endDate","action","type","navigation","isShowLogin","navReducerDefaultState","isShowUserInfo","isLoading","isShowMenu","index_subpage","stocksReducerDefaultState","listAllStocks","require","filtered","selectedStock","stock","filter","s","symbol","includes","str","toUpperCase","company_name","slice","userReducerDefaultState","transactions","token","isLogged","isLoadingTransactions","user","App","React","lazy","store","createStore","combineReducers","navigationReducer","stocks","stocksReducer","filters","filtersReducer","userReducer","applyMiddleware","thunk","ReactDOM","render","Suspense","fallback","Load_FullScreen","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.0df58776.chunk.js","sourcesContent":["import React from 'react';\n\nexport default () => {\n    return (\n        <div className=\"evaluatz_mask_load\">\n            <div className=\"evaluatz-logo-animated-wrapper\">\n                <div className=\"evaluatz-logo-animated\">\n\n                </div>\n                <div className=\"evaluatz-logo-animated_E\">\n                    E\n            </div>\n                <div className=\"evaluatz-logo-animated_V\">\n                    V\n            </div>\n            </div>\n        </div>\n    );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const filtersReducerDefaultState = {\n    text: '',\n    sortBy: 'date',\n    startDate: undefined,\n    endDate: undefined\n  };\n  \n export default (state = filtersReducerDefaultState, action) => {\n    switch (action.type) {\n      case 'SET_TEXT_FILTER':\n        return {\n          ...state,\n          text: !state.navigation.isShowLogin\n        };\n      case 'SORT_BY_AMOUNT':\n        return {\n          ...state,\n          sortBy: 'amount'\n        };\n      case 'SORT_BY_DATE':\n        return {\n          ...state,\n          sortBy: 'date'\n        };\n      case 'SET_START_DATE':\n        return {\n          ...state,\n          startDate: action.startDate\n        };\n      case 'SET_END_DATE':\n        return {\n          ...state,\n          endDate: action.endDate\n        };\n      default:\n        return state;\n    }\n  };","const navReducerDefaultState = {\n  isShowLogin: false,\n  isShowUserInfo: false,\n  isLoading: false,\n  isShowMenu: false,\n  index_subpage: \"Dashboard\"\n};\n\nexport default (state = navReducerDefaultState, action) => {\n  switch (action.type) {\n    case \"LOADING\":\n      return {\n        ...state,\n        isLoading: true\n      };\n    case \"DONE\":\n      \n      return {\n        ...state,\n        isLoading: false\n      };\n    case 'TOGGLE_IS_SHOW_LOGIN':\n      return {\n        ...state,\n        isShowLogin: !state.isShowLogin\n      };\n    case 'FALSE_IS_SHOW_LOGIN':\n      return {\n        ...state,\n        isShowLogin: false\n      };\n    case 'TOGGLE_IS_SHOW_MENU':\n        return {\n          ...state,\n          isShowMenu: !state.isShowMenu\n        };\n    case 'TOGGLE_IS_SHOW_USERINFO':\n      return {\n        ...state,\n        isShowUserInfo: !state.isShowUserInfo\n      };\n    case 'SET_INDEX_SUBPAGE':\n      return {\n        ...state,\n        index_subpage: action.index_subpage\n      };\n    default:\n      return state;\n  }\n};","//REDUX\nconst stocksReducerDefaultState = {\n  isLoading: false,\n  listAllStocks: require('./list.json'),\n  filtered: [],\n  selectedStock: {}\n};\n\nexport default (state = stocksReducerDefaultState, action) => {\n  switch (action.type) {\n    case 'SET_ALL_STOCKS':\n      return {\n        ...state,\n        listAllStocks: action.listAllStocks\n      };\n    case 'SET_SELECTED_STOCK':\n      return {\n        ...state,\n        selectedStock: action.stock\n      }\n    case 'LOADING_STOCKS':\n      return {\n        ...state,\n        isLoading: true\n      };\n    case 'DONE_STOCKS':\n      return {\n        ...state,\n        isLoading: false\n      };\n    case 'FILTER':\n      const filtered = state.listAllStocks.filter(s => s.symbol.includes(action.str.toUpperCase()) || s.company_name.toUpperCase().includes(action.str.toUpperCase())).slice(0, 10);\n      return {\n        ...state,\n        filtered\n      };\n    default:\n      return state;\n  }\n};","const userReducerDefaultState = {\n  transactions: [],\n  token: '',\n  isLogged: false,\n  isLoadingTransactions: false\n};\n\nexport default (state = userReducerDefaultState, action) => {\n  \n  switch (action.type) {\n    case 'CLEAR_USER':\n      return { userReducerDefaultState };\n    case 'UPDATE_USER_FINISH':\n      return {\n        ...state,\n        ...action.user\n      };\n    case 'SET_USER':\n      return {\n        ...state,\n        isLogged: true,\n        ...action.user\n      };\n    case \"UPDATE_TRANSACTIONS_START\":\n      return {\n        ...state,\n        isLoadingTransactions: true\n      };\n    case 'UPDATE_TRANSACTIONS_FINISH':\n      return {\n        ...state,\n        ...action.user,\n        isLoadingTransactions: false\n      };\n    default:\n      return state;\n  }\n};\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport HttpsRedirect from 'react-https-redirect';\n\nimport './index.css';\n\nimport * as serviceWorker from './serviceWorker';\nimport Load_FullScreen from './components/00-General/Load_FullScreen';\n\nimport configureStore from './store/configureStore';\n\n\nimport { Provider } from 'react-redux';\nimport { CookiesProvider } from 'react-cookie';\n\nconst App  = React.lazy(() => import('./App'));\n// const { Provider }  = React.lazy(() => import('react-redux'));\n// const { CookiesProvider }  = React.lazy(() => import('react-cookie'));\n\n\n\nconst store = configureStore();\n\n\nReactDOM.render( \n    <HttpsRedirect>\n        <React.Suspense fallback={<Load_FullScreen />}>\n            <CookiesProvider>\n                <Provider store={store}>\n                    <App/> \n                </Provider>\n            </CookiesProvider>\n        </React.Suspense>\n    </HttpsRedirect>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\n\nimport thunk from 'redux-thunk';\n\nimport filtersReducer from '../reducers/filters';\nimport navigationReducer from '../reducers/navigation';\nimport stocksReducer from '../reducers/stocks';\nimport userReducer from '../reducers/user';\n\nexport default () => {\n  const store = createStore(\n    combineReducers({\n        navigation: navigationReducer,\n        stocks: stocksReducer,\n        filters: filtersReducer,\n        user: userReducer\n    }),\n    applyMiddleware(thunk)\n  );\n\n  return store;\n};\n"],"sourceRoot":""}